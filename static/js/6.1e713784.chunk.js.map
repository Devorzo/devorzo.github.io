{"version":3,"sources":["pages/404.js","components/readMode.js","components/commentEngine.js","pages/readArticles.js"],"names":["Page404","useEffect","document","title","className","id","data-text","style","width","fontSize","color","to","ReadOnly","listItems","data","blocks","map","block","i","key","type","content","element","React","createElement","level","text","height","items","item","oli","parser","uli","scrolling","margin","frameborder","allowfullscreen","src","embed","caption","defaultValue","code","placeholder","alt","file","url","message","tri","dx","d","tdi","push","undefined","meta","image","icon","style_s","backgroundImage","target","rel","href","link","description","matches","match","getHostnameFromRegex","cki","classes","checked","renderBlock","Comments","props","name","rows","ArticleReader","useState","setData","disp","setDisp","banner","setBanner","Axios","post","getApiLink","article_id","articleId","then","response","console","log","success","article_banner","JSON","parse","catch","e","resp","error","overflowY","overflow","display","justifyContent","alignItems","marginTop","borderBottomRightRadius","borderBottomLeftRadius","maxHeight","toString"],"mappings":"yHAAA,kCAsCeA,UAlCC,WAKZ,OAHAC,qBAAU,WACNC,SAASC,MAAQ,6BACnB,IAEE,yBAAKC,UAAU,aACX,yBAAKC,GAAG,YACJ,yBAAKA,GAAG,WACJ,yBAAKD,UAAU,qBAAqBC,GAAG,mBACnC,yBAAKA,GAAG,mBACJ,yBAAKD,UAAU,mBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,gBAAgBE,YAAU,MACrCC,MAAO,CAAEC,MAAO,QAASC,SAAU,UACnC,uBAAGL,UAAU,OAAb,QAEJ,uBAAGA,UAAU,sBAAsBG,MAAO,CAAEG,MAAO,mBAAoBD,SAAU,SAAjF,kBAIA,uBAAGF,MAAO,IAAV,4CACA,kBAAC,IAAD,CACII,GAAG,IAAIJ,MAAO,IADlB,gC,oFCyNrBK,MAff,YAA6B,IAEvBC,EAFsB,EAARC,KAEGC,OAAOC,KAAI,SAACC,EAAOC,GACtC,OACE,yBAAKC,IAAY,UAAYD,GA5Nf,SAAC,EAAgBA,GAAO,IAArBE,EAAoB,EAApBA,KAAMN,EAAc,EAAdA,KAEvBK,EAAM,OAASD,EAEfG,EAAU,GACd,OAAQD,GACN,IAAK,SACH,IAAME,EAAUC,IAAMC,cAAN,WACVV,EAAKW,OACT,CACErB,UAAW,aAEbU,EAAKY,MAEPL,EAAW,yBAAKF,IAAKA,EAAKZ,MAAO,CAAEoB,OAAQ,gBACxCL,GAEH,MAEF,IAAK,OAGDD,EADiB,YAAfP,EAAKP,MACI,wBAAIY,IAAKA,EAAKf,UAAS,4CAAuCU,EAAKP,MAA5C,MAC/BO,EAAKc,MAAMZ,KAAI,SAACa,EAAMC,GAAP,OAAe,wBAAIX,IAAY,QAAUA,EAAM,IAAMW,EAAQ1B,UAAU,kBAAkB2B,IAAOF,QAGvG,wBAAIV,IAAKA,EAAKf,UAAS,4CAAuCU,EAAKP,MAA5C,MAC/BO,EAAKc,MAAMZ,KAAI,SAACa,EAAMG,GAAP,OAAe,wBAAIb,IAAY,QAAUA,EAAM,IAAMa,EAAQ5B,UAAU,kBAAkB2B,IAAOF,QAGpH,MAEF,IAAK,QAEHR,EAAW,yBAAKF,IAAY,KAAOA,EAAQf,UAAU,wBACnD,4BAAQD,MAAM,QAAQC,UAAU,sBAAsB6B,UAAU,KAAK1B,MAAO,CAAE,SAAU,OAAQ2B,OAAQ,UAAYP,OAAQb,EAAKa,OAAQQ,YAAY,IAAI3B,MAAM,OAC7J4B,iBAAe,EAACC,IAAKvB,EAAKwB,QAE5B,yBAAK/B,MAAO,CAAE,UAAa,SAAU,UAAa,QAAUwB,IAAOjB,EAAKyB,WAE1E,MAEF,IAAK,OACHlB,EACE,yBAAKF,IAAY,KAAOA,EAAQf,UAAU,qBACxC,8BAAUoC,aAAc1B,EAAK2B,KAAO,GAAIrC,UAAU,8BAA8BsC,YAAY,gBAIhG,MAEF,IAAK,QACHrB,EACE,yBAAKF,IAAY,OAASA,EAAQf,UAAU,2CAC1C,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,4BAA4BuC,IAAI,MAAMN,IAAKvB,EAAK8B,KAAKC,OAEtE,yBAAKzC,UAAU,uBAAuB2B,IAAOjB,EAAKyB,WAGtD,MAEF,IAAK,cACHlB,EACE,yBAAKF,IAAY,SAAWA,EAAQf,UAAU,8BAC5C,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,8BAA8BuC,IAAI,IAAIN,IAAKvB,EAAK+B,OAEjE,yBAAKzC,UAAU,6BAA6B2B,IAAOjB,EAAKyB,WAG5D,MAEF,IAAK,YACHlB,EAAW,yBAAKF,IAAY,SAAWA,EAAQf,UAAU,2BACzD,MAEF,IAAK,UACHiB,EAAW,yBAAKF,IAAY,QAAUA,EAAQf,UAAU,yBACtD,yBAAKA,UAAU,gCACZ2B,IAAO,GAAD,OAAIjB,EAAKX,SAElB,yBAAKC,UAAU,kCACZ2B,IAAO,GAAD,OAAIjB,EAAKgC,YAGpB,MAEF,IAAK,QACHzB,EACE,yBAAKF,IAAY,KAAOA,EAAQf,UAAU,uBACxC,yBAAKA,UAAU,6BAEb,uBAAGA,UAAU,QAAQ2B,IAAOjB,EAAKY,QAInC,yBAAKtB,UAAU,8CACZ2B,IAAOjB,EAAKyB,WAInB,MAEF,IAAK,QAEHlB,EACE,yBAAKjB,UAAU,sBAAsBe,IAAY,SAAWA,GAC1D,yBAAKf,UAAU,kBACb,2BAAOA,UAAU,YACf,+BACGU,EAAKO,QAAQL,KAAI,SAACa,EAAMkB,GACvB,IAAIC,EAAK,GAgBT,OAdAnB,EAAKb,KAAI,SAACiC,EAAGC,GAWX,OAVAF,EAAGG,KACD,wBAAI/C,UAAU,iBAAiBe,IAAY,YAAcA,EAAM,IAAM+B,GACnE,yBAAK9C,UAAU,kBACb,yBAAKA,UAAU,iBACZ2B,IAAOkB,OAMT,MAGD,wBAAI9B,IAAY,YAAcA,EAAM,IAAM4B,GAC/CC,UAQf,MAEF,IAAK,WACH,IAAIH,QAA2BO,IAApBtC,EAAKuC,KAAKC,OAA2C,OAApBxC,EAAKuC,KAAKC,QAAoBxC,EAAKuC,KAAKC,MAAMT,IAAQ/B,EAAKuC,KAAKC,MAAMT,IAAa,GAE/HA,EAAe,KAARA,QAAkCO,IAAnBtC,EAAKuC,KAAKE,MAAyC,OAAnBzC,EAAKuC,KAAKE,KAAuEV,EAAnD/B,EAAKuC,KAAKE,KAAKV,IAAQ/B,EAAKuC,KAAKE,KAAKV,IAAO,GAIjI,IAAIW,EAAU,CACZC,gBAAgB,QAAD,OAAWZ,EAAX,OAEjBxB,EACE,yBAAKF,IAAY,UAAYA,EAAQf,UAAU,aAC7C,yBAAKA,UAAU,aACb,uBAAGA,UAAU,kDAAkDsD,OAAO,SAASC,IAAI,uCAAuCC,KAAM9C,EAAK+C,MACnI,yBAAKzD,UAAU,mBAAmBG,MAAOiD,IAIzC,yBAAKpD,UAAU,oBAAoBU,EAAKuC,KAAKlD,OAE7C,uBAAGC,UAAU,0BAA0BU,EAAKuC,KAAKS,aAEjD,0BAAM1D,UAAU,qBAzKD,SAACyC,GAG5B,IAAMkB,EAAUlB,EAAImB,MAAM,wCAE1B,OAAOD,GAAWA,EAAQ,GAoKuBE,CAAqBnD,EAAK+C,UAMvE,MAEF,IAAK,YACHxC,EACE,yBAAKF,IAAY,KAAOA,EAAQf,UAAU,gCACvC2B,IAAO,GAAD,OAAIjB,EAAKY,QAGpB,MAEF,IAAK,YAEHL,EACE,yBAAKF,IAAY,OAASA,EAAQf,UAAU,2BAEzCU,EAAKc,MAAMZ,KAAI,SAACiC,EAAGiB,GAClB,IAAIC,EAAU,sBAKd,OAJIlB,EAAEmB,UACJD,GAAW,iCAIX,yBAAKhD,IAAY,SAAWA,EAAM,IAAM+C,EAAQ9D,UAAW+D,GACzD,0BAAM/D,UAAU,iCAEhB,yBAAKA,UAAU,4BACZ6C,EAAEvB,WAWf,MACF,QACEL,EAAW,yBAAKF,IAAY,OAASA,EAAQf,UAAU,0BAA5C,IAAuE2B,IAAO,GAAD,OAAIjB,EAAKY,OAAtF,KAGf,OAAQ,yBAAKtB,UAAU,YACrB,yBAAKA,UAAU,qBACZiB,IAUEgD,CAAYpD,EAAOC,OAK1B,OACE,oCAAGL,I,kCC3NQyD,EAlBE,SAACC,GACd,OACI,oCACI,8BAAUC,KAAK,cAAcnE,GAAG,OAAOD,UAAU,qBAAqBqE,KAAK,IAAI/B,YAAY,kBAC3F,4BAAQtC,UAAU,wBAAlB,WACA,wBAAIA,UAAU,YC4JXsE,UA1JO,SAACH,GAEnB,IAAIpD,EAAM,EAFmB,EAGLwD,mBAAS,MAHJ,mBAGtB7D,EAHsB,KAGhB8D,EAHgB,OAILD,mBAAS,GAJJ,mBAItBE,EAJsB,KAIhBC,EAJgB,OAKDH,mBAAS,IALR,mBAKtBI,EALsB,KAKdC,EALc,KAqD7B,OA/CA/E,qBAAU,WACNgF,IAAMC,KAAN,UAAcC,cAAd,0BAAoD,CAChDC,WAAYb,EAAMc,YACnBC,MAAK,SAACC,GAIL,GAHAC,QAAQC,IAAIF,GAGRA,EAASzE,KAAK4E,SAEVH,EAASzE,KAAKgC,QAAQhC,KAAKO,QAC3B,IACsD,OAA9CkE,EAASzE,KAAKgC,QAAQhC,KAAK6E,gBAC3BX,EAAUO,EAASzE,KAAKgC,QAAQhC,KAAK6E,gBAEzCzF,SAASC,MAAQoF,EAASzE,KAAKgC,QAAQhC,KAAKX,MAAQ,aACpDyE,EAAQgB,KAAKC,MAAMN,EAASzE,KAAKgC,QAAQhC,KAAKO,UAC9CyD,EAAQ,GACV,SACEA,EAAQ,OAMrBgB,OAAM,SAACC,GAENjB,EAAQ,GACR,IAEQiB,IACAP,QAAQC,IAAI,CAAEO,KAAMD,EAAER,SAASzE,OACO,OAAlCiF,EAAER,SAASzE,KAAKmF,MAAMnD,SACtB0C,QAAQC,IAAIM,IAOtB,gBAMP,IAEK,oCACJ,yBAAKxF,MAAO,CACR2F,UAAW,WAIQ,OAAXnB,GAA8B,KAAXA,EAEf,oCACI,yBAAK3E,UAAU,2CACX,yBAAKA,UAAU,oBAAoBG,MAAO,CACtCoB,OAAQ,OACRnB,MAAO,QACP2F,SAAU,SACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,OACXC,wBAAyB,OACzBC,uBAAwB,SAGxB,yBAAKrG,UAAU,+BACX,yBAAKiC,IAAK0C,EAAQ3E,UAAU,YAAYuC,IAAI,OAASpC,MAAO,CACxDoB,OAAQ,OACRnB,MAAO,OACPgG,wBAAyB,OACzBC,uBAAwB,cAS5C,oCACI,6BACA,6BACA,8BAMhB,yBAAKrG,UAAU,YAAYG,MAAO,CAC9B2F,UAAW,WAEX,yBAAK9F,UAAU,OAEX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACT,WACE,GAAe,OAAX2E,GAA8B,KAAXA,EACnB,OACI,oCACI,yBAAK3E,UAAU,4DACX,yBACIA,UAAU,UACViC,IAAK0C,EAAQpC,IAAI,OAASpC,MAAO,CAC7BmG,UAAW,OACXlG,MAAO,OACPmB,OAAQ,OACR6E,wBAAyB,OACzBC,uBAAwB,YAZlD,GAwBe,IAAT5B,EAEI,oCACI,kBAAC,EAAD,CAAU1D,KAAMA,KAAOwF,WAAY7F,KAAMA,IACzC,6BACA,6BACA,6BACA,wBAAIV,UAAU,UACd,kBAAC,EAAD,OAGQ,IAATyE,EACC,oCAAE,kBAAC,UAAD,YADP","file":"static/js/6.1e713784.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Page404 = () => {\r\n\r\n    useEffect(()=>{\r\n        document.title = \"Page not found - Lattice\"\r\n    },[])\r\n    return (\r\n        <div className=\"container\">\r\n            <div id=\"page-top\">\r\n                <div id=\"wrapper\">\r\n                    <div className=\"d-flex flex-column\" id=\"content-wrapper\">\r\n                        <div id=\"content card-sh\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"text-center mt-5\">\r\n                                    <div className=\"error mx-auto\" data-text=\"404\"\r\n                                        style={{ width: \"297px\", fontSize: \"147px\" }}>\r\n                                        <p className=\"m-0\">404</p>\r\n                                    </div>\r\n                                    <p className=\"text-dark mb-5 lead\" style={{ color: \"rgb(255,255,255)\", fontSize: \"50px\" }}>Page\r\n                                    Not Found\r\n                                    </p>\r\n                                    {/* color: \"rgb(203,207,238)\"  */}\r\n                                    <p style={{}}>There seems to be a glitch in the Matrix</p>\r\n                                    <Link\r\n                                        to=\"/\" style={{}}>‚Üê Back to Home</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page404;","/* eslint-disable no-useless-escape */\r\nimport React from 'react';\r\nimport parser from 'html-react-parser';\r\n\r\nconst getHostnameFromRegex = (url) => {\r\n  // run against regex\r\n\r\n  const matches = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i);\r\n  // extract hostname (will be null if no match is found)\r\n  return matches && matches[1];\r\n}\r\n\r\nconst renderBlock = ({ type, data }, i) => {\r\n\r\n  let key = \"key-\" + i\r\n\r\n  let content = \"\"\r\n  switch (type) {\r\n    case \"header\":\r\n      const element = React.createElement(\r\n        `h${data.level}`,\r\n        {\r\n          className: 'ce-header',\r\n        },\r\n        data.text\r\n      )\r\n      content = (<div key={key} style={{ height: \"fit-content\" }}>\r\n        {element}\r\n      </div>)\r\n      break;\r\n\r\n    case \"list\":\r\n\r\n      if (data.style === \"ordered\") {\r\n        content = (<ol key={key} className={`\"cdx-block\" \"cdx-list\" \"cdx-list--${data.style}\"`}>\r\n          {data.items.map((item, oli) => <li key={(() => \"l-ol-\" + key + \"-\" + oli)()} className=\"cdx-list__item\">{parser(item)}</li>)}\r\n        </ol>)\r\n      } else {\r\n        content = (<ul key={key} className={`\"cdx-block\" \"cdx-list\" \"cdx-list--${data.style}\"`}>\r\n          {data.items.map((item, uli) => <li key={(() => \"l-ul-\" + key + \"-\" + uli)()} className=\"cdx-list__item\">{parser(item)}</li>)}\r\n        </ul>)\r\n      }\r\n      break;\r\n\r\n    case \"embed\":\r\n\r\n      content = (<div key={(() => \"e-\" + key)()} className=\"cdx-block embed-tool\">\r\n        <iframe title=\"embed\" className=\"embed-tool__content\" scrolling=\"no\" style={{ \"#brand\": \"none\", margin: \"0 auto\" }} height={data.height} frameborder=\"0\" width=\"100%\"\r\n          allowfullscreen src={data.embed}>\r\n        </iframe>\r\n        <div style={{ 'textAlign': \"center\", 'marginTop': \"5px\" }}>{parser(data.caption)}</div>\r\n      </div>)\r\n      break;\r\n\r\n    case \"code\":\r\n      content = (\r\n        <div key={(() => \"c-\" + key)()} className=\"cdx-block ce-code\">\r\n          <textarea defaultValue={data.code + \"\"} className=\"ce-code__textarea cdx-input\" placeholder=\"Enter code\">\r\n          </textarea>\r\n        </div>\r\n      )\r\n      break;\r\n\r\n    case \"image\":\r\n      content = (\r\n        <div key={(() => \"img-\" + key)()} className=\"cdx-block image-tool image-tool--filled\">\r\n          <div className=\"image-tool__image\">\r\n            <img className=\"image-tool__image-picture\" alt=\"img\" src={data.file.url}></img>\r\n          </div>\r\n          <div className=\"image-tool__caption\">{parser(data.caption)}</div>\r\n        </div>\r\n      )\r\n      break;\r\n\r\n    case \"simpleImage\":\r\n      content = (\r\n        <div key={(() => \"s-img-\" + key)()} className=\"cdx-block cdx-simple-image\">\r\n          <div className=\"cdx-simple-image__picture\">\r\n            <img className=\"image-tool__image-picture_x\" alt=\"i\" src={data.url}></img>\r\n          </div>\r\n          <div className=\"cdx-simple-image__caption\">{parser(data.caption)}</div>\r\n        </div>\r\n      )\r\n      break;\r\n\r\n    case \"delimiter\":\r\n      content = (<div key={(() => \"delim-\" + key)()} className=\"ce-delimiter cdx-block\"></div>)\r\n      break;\r\n\r\n    case \"warning\":\r\n      content = (<div key={(() => \"warn-\" + key)()} className=\"cdx-block cdx-warning\">\r\n        <div className=\"cdx-input cdx-warning__title\">\r\n          {parser(`${data.title}`)}\r\n        </div>\r\n        <div className=\"cdx-input cdx-warning__message\">\r\n          {parser(`${data.message}`)}\r\n        </div>\r\n      </div>)\r\n      break;\r\n\r\n    case \"quote\":\r\n      content = (\r\n        <div key={(() => \"q-\" + key)()} className=\"cdx-block cdx quote\">\r\n          <div className=\"cdx-input cdx-quote__text\">\r\n            {/* <blockquote className=\"blockquote\" style_x={{ borderLeft: \"4px solid gray\" }}> */}\r\n            <p className=\"mb-0\">{parser(data.text)}</p>\r\n            {/* </blockquote> */}\r\n          </div>\r\n\r\n          <div className=\"text-center_x cdx-input cdx-quote__caption\">\r\n            {parser(data.caption)}\r\n          </div>\r\n        </div>\r\n      )\r\n      break;\r\n\r\n    case \"table\":\r\n\r\n      content = (\r\n        <div className=\"tc-editor cdx-block\" key={(() => \"table-\" + key)()}>\r\n          <div className=\"tc-table__wrap\">\r\n            <table className=\"tc-table\">\r\n              <tbody>\r\n                {data.content.map((item, tri) => {\r\n                  let dx = [];\r\n\r\n                  item.map((d, tdi) => {\r\n                    dx.push(\r\n                      <td className=\"tc-table__cell\" key={(() => \"table-td-\" + key + \"-\" + tdi)()}>\r\n                        <div className=\"tc-table__area\">\r\n                          <div className=\"tc-table__inp\">\r\n                            {parser(d)}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    )\r\n\r\n                    return \"\"\r\n                  })\r\n\r\n                  return (<tr key={(() => \"table-tr-\" + key + \"-\" + tri)()}>\r\n                    {dx}\r\n                  </tr>)\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )\r\n      break;\r\n\r\n    case \"linkTool\":\r\n      let url = (data.meta.image !== undefined || data.meta.image !== null) ? ((data.meta.image.url) ? (data.meta.image.url) : \"\") : \"\"\r\n\r\n      url = (url === \"\" && (data.meta.icon !== undefined || data.meta.icon !== null)) ? ((data.meta.icon.url) ? (data.meta.icon.url) : \"\") : url\r\n        // ) : \"\"\r\n\r\n        ;\r\n      let style_s = {\r\n        backgroundImage: `url(\\\"${url}\\\")`\r\n      }\r\n      content = (\r\n        <div key={(() => \"link-t-\" + key)()} className=\"cdx-block\">\r\n          <div className=\"link-tool\">\r\n            <a className=\"link-tool__content link-tool__content--rendered\" target=\"_blank\" rel=\"nofollow noindex noopener noreferrer\" href={data.link}>\r\n              <div className=\"link-tool__image\" style={style_s}>\r\n\r\n              </div>\r\n\r\n              <div className=\"link-tool__title\">{data.meta.title}</div>\r\n\r\n              <p className=\"link-tool__description\">{data.meta.description}</p>\r\n\r\n              <span className=\"link-tool__anchor\">{getHostnameFromRegex(data.link)}</span>\r\n\r\n            </a></div>\r\n\r\n        </div>\r\n      )\r\n      break;\r\n\r\n    case \"paragraph\":\r\n      content = (\r\n        <div key={(() => \"p-\" + key)()} className=\"ce-paragraph cdx-block w-100\">\r\n          {parser(`${data.text}`)}\r\n        </div>\r\n      )\r\n      break;\r\n\r\n    case \"checklist\":\r\n      ;\r\n      content = (\r\n        <div key={(() => \"chk-\" + key)()} className=\"cdx-block cdx-checklist\">\r\n\r\n          {data.items.map((d, cki) => {\r\n            let classes = \"cdx-checklist__item\"\r\n            if (d.checked) {\r\n              classes += \" cdx-checklist__item--checked\"\r\n            }\r\n\r\n            return (\r\n              <div key={(() => \"chk-ck\" + key + \"-\" + cki)()} className={classes}>\r\n                <span className=\"cdx-checklist__item-checkbox\"></span>\r\n                {/* <input type=\"checkbox\" class=\"form-control_x\" checked={d.checked}/> */}\r\n                <div className=\"cdx-checklist__item-text\">\r\n                  {d.text}\r\n                </div>\r\n\r\n              </div>\r\n            )\r\n\r\n          })}\r\n\r\n        </div>\r\n      )\r\n\r\n      break;\r\n    default:\r\n      content = (<div key={(() => \"def-\" + key)()} className=\"ce-paragraph cdx-block\"> {parser(`${data.text}`)} </div>)\r\n      break;\r\n  }\r\n  return (<div className=\"ce-block\">\r\n    <div className=\"ce-block__content\">\r\n      {content}\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nfunction ReadOnly({ data }) {\r\n\r\n  let listItems = data.blocks.map((block, i) => {\r\n    return (\r\n      <div key={(() => \"render-\" + i)()}>\r\n        {renderBlock(block, i)}\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <>{listItems}</>\r\n  );\r\n}\r\n\r\nexport default ReadOnly;","import React from 'react';\r\n\r\nconst Comments = (props) => {\r\n    return (\r\n        <>\r\n            <textarea name=\"new-comment\" id=\"comt\" className=\"w-100 form-control\" rows=\"3\" placeholder=\"Add a comment\" />\r\n            <button className=\"btn btn-primary mt-2\">Publish</button>\r\n            <hr className=\"light\" />\r\n\r\n            {/* <div class=\"input-group\">\r\n               \r\n                <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\r\n                <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">With textarea</span>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Comments;","import React, { useEffect, useState } from 'react';\r\n\r\nimport ReadMode from \"../components/readMode\"\r\nimport Axios from \"axios\"\r\nimport { getApiLink } from '../lib/env.lib';\r\nimport Page404 from \"./404\"\r\nimport Comments from '../components/commentEngine'\r\n\r\n// import { DiscussionEmbed } from 'disqus-react';\r\nconst ArticleReader = (props) => {\r\n    // const instanceRef = useRef(null);\r\n    let key = 0\r\n    const [data, setData] = useState(null)\r\n    const [disp, setDisp] = useState(0)\r\n    const [banner, setBanner] = useState(\"\")\r\n    useEffect(() => {\r\n        Axios.post(`${getApiLink()}/api/v1/getArticleById`, {\r\n            article_id: props.articleId\r\n        }).then((response) => {\r\n            console.log(response)\r\n            // alert(response)\r\n\r\n            if (response.data.success) {\r\n\r\n                if (response.data.message.data.content) {\r\n                    try {\r\n                        if (response.data.message.data.article_banner !== \"NA\")\r\n                            setBanner(response.data.message.data.article_banner)\r\n\r\n                        document.title = response.data.message.data.title + \" - Lattice\"\r\n                        setData(JSON.parse(response.data.message.data.content))\r\n                        setDisp(1)\r\n                    } catch{\r\n                        setDisp(2)\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n        }).catch((e) => {\r\n\r\n            setDisp(2)\r\n            try {\r\n\r\n                if (e) {\r\n                    console.log({ resp: e.response.data })\r\n                    if (e.response.data.error.message !== null) {\r\n                        console.log(e)\r\n                    } else {\r\n                        // notyf.error(\"Error\")\r\n                    }\r\n                } else {\r\n                    // notyf.error(\"Error\")\r\n                }\r\n            } catch{\r\n\r\n            }\r\n\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (<>\r\n        <div style={{\r\n            overflowY: \"hidden\"\r\n        }}>\r\n\r\n            {(() => {\r\n                if (banner !== \"NA\" || banner !== \"\") {\r\n                    return (\r\n                        <>\r\n                            <div className=\"w-100 show-xs show-sm hide-md preload_x\">\r\n                                <div className=\" text-center mb-2\" style={{\r\n                                    height: \"40vw\",\r\n                                    width: \"100vw\",\r\n                                    overflow: \"hidden\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                    marginTop: \"15px\",\r\n                                    borderBottomRightRadius: \"18px\",\r\n                                    borderBottomLeftRadius: \"18px\",\r\n                                    // marginTop: \"60px\"\r\n                                }}>\r\n                                    <div className=\"preload w-100 h-100 preload\">\r\n                                        <img src={banner} className=\"preload_x\" alt=\"&nbsp;\" style={{\r\n                                            height: \"100%\",\r\n                                            width: \"auto\",\r\n                                            borderBottomRightRadius: \"16px\",\r\n                                            borderBottomLeftRadius: \"16px\",\r\n                                        }} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <>\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                        </>\r\n                    )\r\n                }\r\n            })()}\r\n\r\n            <div className=\"container\" style={{\r\n                overflowY: \"hidden\"\r\n            }}>\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col-lg-8\" >\r\n                        {(() => {\r\n                            if (banner !== \"NA\" || banner !== \"\") {\r\n                                return (\r\n                                    <>\r\n                                        <div className=\"text-center mb-2 hide-xs hide-sm show-md show-lg show-xl\">\r\n                                            <img\r\n                                                className=\"preload\"\r\n                                                src={banner} alt=\"&nbsp;\" style={{\r\n                                                    maxHeight: \"20vw\",\r\n                                                    width: \"100%\",\r\n                                                    height: \"20vw\",\r\n                                                    borderBottomRightRadius: \"16px\",\r\n                                                    borderBottomLeftRadius: \"16px\",\r\n                                                    // marginTop: \"60px\"\r\n\r\n                                                }} />\r\n                                        </div>\r\n\r\n                                    </>\r\n                                )\r\n                            }\r\n                        })()}\r\n\r\n                        {(() => {\r\n                            if (disp === 1) {\r\n                                return (\r\n                                    <>\r\n                                        <ReadMode key={(key++).toString()} data={data} />\r\n                                        <br />\r\n                                        <br />\r\n                                        <br />\r\n                                        <hr className=\"light\"/>\r\n                                        <Comments/>\r\n                                    </>\r\n                                )\r\n                            } else if (disp === 2) {\r\n                                return (<><Page404 /></>)\r\n                            }\r\n                        })()}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default ArticleReader;"],"sourceRoot":""}