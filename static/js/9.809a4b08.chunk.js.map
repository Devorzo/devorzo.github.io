{"version":3,"sources":["lib/editorjs.dependencies.js","pages/editorjs.js","pages/newArticle.js"],"names":["EDITOR_JS_TOOLS","embed","class","Embed","inlineToolbar","config","services","youtube","coub","imgur","twitch","gfycat","yandex","codepen","vimeo","twitter","regex","embedUrl","html","height","width","id","ids","join","instagram","table","Table","rows","cols","paragraph","Paragraph","list","List","warning","Warning","shortcut","titlePlaceholder","messagePlaceholder","code","Code","linkTool","LinkTool","endpoint","getApiLink","image","Image","uploader","uploadByFile","file","f","FormData","append","Axios","post","then","doc","console","log","data","success","url","file_name","catch","e","header","Header","quote","Quote","marker","Marker","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","simpleImage","SimpleImage","getRandomBanner","min","max","Math","round","random","Editor","props","instanceRef","useRef","useContext","AuthContext","user_id","user_dp","user_fullname","user_username","useState","show","setShow","data_editor","setData","mode","setMode","api","setApi","title","setTitle","preview","setPreview","redir","setRedirect","ready","setReady","articleId","setArticleId","banner","setBanner","article_tags","setTags","tagsInput","setTagsInput","handleClose","handleSave","a","current","save","savedData","blocks","length","text","handleBannerClick","useEffect","articleData","JSON","parse","content","time","Date","now","version","article_id","article_banner","tags","t","map","i","tag","className","style","overflow","display","justifyContent","alignItems","marginTop","borderBottomRightRadius","borderBottomLeftRadius","src","alt","onClick","type","notyf","error","Modal","onHide","size","closeButton","Title","Body","bannerLink","user","imageLink","name","username","placeholder","value","onChange","val","target","trim","indexOf","toLowerCase","concat","open","message","fontSize","h","hexStrColor","inv","invertColor","backgroundColor","color","cursor","splice","handleTagRemoval","Footer","Button","variant","_data_editor","xAuthToken","auth_token","stringify","response","to","resp","instance","tools","NewArticle","document"],"mappings":"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","file":"static/js/9.809a4b08.chunk.js","sourcesContent":["import Axios from \"axios\"\r\nimport { getApiLink } from \"./env.lib\"\r\nimport Embed from '@editorjs/embed'\r\nimport Table from '@editorjs/table'\r\nimport Paragraph from '@editorjs/paragraph'\r\nimport List from '@editorjs/list'\r\nimport Warning from '@editorjs/warning'\r\nimport Code from '@editorjs/code'\r\nimport LinkTool from '@editorjs/link'\r\nimport Image from '@editorjs/image'\r\n// import Raw from '@editorjs/raw'\r\nimport Header from '@editorjs/header'\r\nimport Quote from '@editorjs/quote'\r\nimport Marker from '@editorjs/marker'\r\nimport CheckList from '@editorjs/checklist'\r\nimport Delimiter from '@editorjs/delimiter'\r\nimport InlineCode from '@editorjs/inline-code'\r\nimport SimpleImage from '@editorjs/simple-image'\r\n\r\nexport const EDITOR_JS_TOOLS = {\r\n    embed: {\r\n        class: Embed,\r\n        inlineToolbar: true,\r\n        config: {\r\n            services: {\r\n                youtube: true,\r\n                coub: true,\r\n                imgur: true,\r\n                twitch: true,\r\n                gfycat: true,\r\n                yandex: true,\r\n                codepen: true,\r\n                vimeo: true,\r\n                // twitter:true,\r\n                twitter: {\r\n                    regex: /^https?:\\/\\/twitter\\.com\\/(?:#!\\/)?(\\w+)\\/status(?:es)?\\/(\\d+)(?:\\/.*)?$/,\r\n                    embedUrl: 'https://twitframe.com/show?url=https://twitter.com/<%= remote_id %>',\r\n                    html: '<iframe width=\"100%\" height=\"600\" style=\"margin: 0 auto;\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>',\r\n                    height: 600,\r\n                    width: 600,\r\n                    id: ids => ids.join('/status/')\r\n                },\r\n                instagram: {\r\n                    regex: /(https?:\\/\\/(?:www\\.)?instagram\\.com\\/p\\/([^/?#&]+)).*/,\r\n                    embedUrl: '<%= remote_id %>',\r\n                    html: '<div style=\"width: 100%; height: 100px; background-color: #DB2E6E; text-align: center; color: #ffffff; padding-top: 40px\">Instagram embedded.</div>',\r\n                    height: 300,\r\n                    width: 600\r\n                },\r\n\r\n                // instagram: {\r\n                //     regex: /https?:\\/\\/www\\.instagram\\.com\\/p\\/([^\\/\\?\\&]+)\\/?/,\r\n                //     embedUrl: 'https://www.instagram.com/p/<%= remote_id %>/embed',\r\n                //     html: '<iframe width=\"400\" height=\"505\" style=\"margin: 0 auto;\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>',\r\n                //     height: 505,\r\n                //     width: 400\r\n                // },\r\n\r\n            }\r\n        }\r\n    },\r\n    table: {\r\n        class: Table,\r\n        inlineToolbar: true,\r\n        config: {\r\n            rows: 2,\r\n            cols: 3,\r\n        },\r\n    },\r\n    paragraph: {\r\n        class: Paragraph,\r\n        inlineToolbar: true\r\n    },\r\n    list: {\r\n        class: List,\r\n        inlineToolbar: true,\r\n    },\r\n    warning: {\r\n        class: Warning,\r\n        inlineToolbar: true,\r\n        shortcut: 'CMD+SHIFT+W',\r\n        config: {\r\n            titlePlaceholder: 'Title',\r\n            messagePlaceholder: 'Message',\r\n        },\r\n    },\r\n    code: Code,\r\n    // linkTool: LinkTool,\r\n    linkTool: {\r\n        class: LinkTool,\r\n        config: {\r\n            endpoint: `${getApiLink()}/linkToolUrl` , // Your backend endpoint for url data fetching\r\n        }\r\n    },\r\n    // image: Image,\r\n    image: {\r\n        class: Image,\r\n        config: {\r\n\r\n            uploader: {\r\n                uploadByFile(file) {\r\n                    let f = new FormData()\r\n                    f.append(\"file\", file)\r\n                    return Axios.post(`${getApiLink()}/api/v1/upload`, f, {\r\n\r\n                    }).then((doc) => {\r\n                        console.log(doc)\r\n\r\n                        if (doc.data.success) {\r\n                            return {\r\n                                success: 1,\r\n                                file: {\r\n                                    url: `${getApiLink()}/file/${doc.data.file_name}`\r\n                                }\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                success: 0\r\n                            }\r\n                        }\r\n                    }).catch((e) => {\r\n                        console.log(e)\r\n                        console.log(\"Error while uploading image\")\r\n                        return {\r\n                            success: 0\r\n                        }\r\n                    })\r\n                },\r\n            }\r\n        }\r\n    },\r\n    header: Header,\r\n    quote: Quote,\r\n    marker: Marker,\r\n    checklist: CheckList,\r\n    delimiter: Delimiter,\r\n    inlineCode: InlineCode,\r\n    simpleImage: SimpleImage\r\n}","/* eslint-disable eqeqeq */\r\nimport React, { useContext, useRef, useState, useEffect } from 'react';\r\n\r\nimport EditorJs from 'react-editor-js';\r\nimport Axios from \"axios\"\r\n\r\nimport { AuthContext } from \"../contexts/auth_context\"\r\nimport Card from \"../components/card2\"\r\nimport { hexStrColor, invertColor } from \"../lib/colors.lib\"\r\nimport { Button, Modal } from \"react-bootstrap\"\r\nimport { EDITOR_JS_TOOLS } from \"../lib/editorjs.dependencies\"\r\nimport { getApiLink } from '../lib/env.lib';\r\nimport { Redirect } from \"react-router-dom\"\r\nexport const randNum = (min, max) => {\r\n    let random = Math.round(Math.random() * (+max - +min) + +min)\r\n    return random\r\n}\r\n\r\nexport const getRandomBanner = () => {\r\n    return `https://picsum.photos/id/${randNum(0, 1084)}/1200/400.jpg`\r\n}\r\nconst Editor = (props) => {\r\n    // let key_i = 0;\r\n    const instanceRef = useRef(null);\r\n\r\n    const { user_id, user_dp, user_fullname, user_username } = useContext(AuthContext)\r\n    const [show, setShow] = useState(false)\r\n    const [data_editor, setData] = useState(null)\r\n    const [mode, setMode] = useState(null)\r\n    const [api, setApi] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\")\r\n    const [preview, setPreview] = useState(\"\")\r\n    const [redir, setRedirect] = useState(<></>)\r\n    const [ready, setReady] = useState(false)\r\n    const [articleId, setArticleId] = useState(\"\")\r\n    const [banner, setBanner] = useState(\"NA\")\r\n    const [article_tags, setTags] = useState([])\r\n    const [tagsInput, setTagsInput] = useState()\r\n\r\n    function handleTagsAddition(e) {\r\n        let val = e.target.value\r\n        let lastChar = val[val.length - 1] //take only the last character\r\n        if (lastChar === ' ') {//check if the last character is a <space>\r\n\r\n            if (article_tags.length < 5) {\r\n                if (val.trim().length >= 3 && val.trim().length <= 20) {\r\n                    let t = article_tags\r\n                    if (t.indexOf(val.trim().toLowerCase()) === -1) {\r\n                        setTags(t.concat(val.trim().toLowerCase()))\r\n                    } else {\r\n                        props.notyf.open({ type: \"warn\", message: \"The tag has already been added.\" })\r\n                    }\r\n                } else {\r\n                    props.notyf.error(\"Invalid tag\")\r\n                }\r\n            } else {\r\n                props.notyf.error(\"Only upto 5 tags are allowed on a single article.\")\r\n            }\r\n            setTagsInput(\"\")\r\n        }\r\n        else {\r\n            setTagsInput(val)\r\n        }\r\n    }\r\n\r\n    function handleTagRemoval(val) {\r\n        let i = article_tags.indexOf(val)\r\n        if (i !== -1) {\r\n            let t = article_tags\r\n            t.splice(i, 1)\r\n            setTags(t)\r\n            handleSave()\r\n        } else {\r\n            props.notyf.error(\"Tag not found\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    function handleOpen() {\r\n        setShow(true)\r\n    }\r\n\r\n    function validatePublish() {\r\n        if (data_editor.blocks.length > 0) {\r\n            if (data_editor.blocks[0].type === \"paragraph\" || data_editor.blocks[0].type === \"header\") {\r\n                handleOpen()\r\n            } else {\r\n                props.notyf.error(\"Invalid article title\")\r\n            }\r\n        } else {\r\n            props.notyf.error(\"Invalid article\")\r\n        }\r\n    }\r\n    function handleClose() {\r\n        setShow(false)\r\n    }\r\n    async function handleSave() {\r\n        const savedData = await instanceRef.current.save();\r\n        if (savedData.blocks.length > 0) {\r\n            setTitle(savedData.blocks[0].data.text)\r\n            if (savedData.blocks.length > 1) {\r\n                setPreview(savedData.blocks[1].data.text)\r\n            }\r\n        } else {\r\n            setTitle(\"No title\")\r\n        }\r\n        setData(savedData)\r\n        console.log(\"savedData\", savedData);\r\n    }\r\n\r\n    function handleBtnClick() {\r\n        handleSave()\r\n        if (data_editor.blocks.length > 0) {\r\n\r\n            if (data_editor.blocks[0].type === \"paragraph\" || data_editor.blocks[0].type === \"header\") {\r\n\r\n\r\n                let _data_editor = {}\r\n                if (props.mode === \"edit\") {\r\n                    _data_editor.article_id = articleId\r\n                } else if (props.mode === \"new\") {\r\n\r\n                }\r\n\r\n                if (banner !== \"NA\") {\r\n                    _data_editor.article_banner = banner\r\n                }\r\n                _data_editor.xAuthToken = props.auth_token\r\n                _data_editor.title = data_editor.blocks[0].data.text\r\n                _data_editor.content = JSON.stringify(data_editor)\r\n                _data_editor.preview = (data_editor.blocks.length >= 2) ? data_editor.blocks[1].data.text : data_editor.blocks[0].data.text\r\n                _data_editor.tags = article_tags\r\n\r\n                console.log({ _data_editor })\r\n\r\n                Axios.post(`${getApiLink()}/api/v1/${api}`, _data_editor).then((response) => {\r\n                    console.log(response)\r\n                    if (response.data.success) {\r\n                        if (props.mode === \"edit\") {\r\n                            props.notyf.success(\"Saved article\")\r\n\r\n                        } else {\r\n                            props.notyf.success(\"Published article\")\r\n                        }\r\n                        setRedirect(\r\n                            <>\r\n                                <Redirect to={(() => `/read/${response.data.message.data.article_id}`)()} />\r\n                            </>\r\n                        )\r\n                    }\r\n                }).catch(e => {\r\n                    if (e) {\r\n                        console.log({ resp: e.response.data })\r\n                        if (e.response.data.error.message !== null) {\r\n                            props.notyf.error(\"\" + e.response.data.error.message)\r\n                        } else {\r\n                            props.notyf.error(\"Error occured\")\r\n                        }\r\n                    } else {\r\n                        props.notyf.error(\"Error occured\")\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                props.notyf.error(\"Invalid article title\")\r\n            }\r\n        } else {\r\n            props.notyf.error(\"Invalid article\")\r\n        }\r\n    }\r\n\r\n    function handleBannerClick() {\r\n        if (banner === \"NA\") {\r\n            setBanner(getRandomBanner())\r\n        } else {\r\n            setBanner(\"NA\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (props.mode === \"edit\") {\r\n            setMode(\"Save\")\r\n            setApi(\"updateArticleById\")\r\n            if (props.articleData) {\r\n                setData(JSON.parse(props.articleData.content))\r\n            } else {\r\n                setData({ time: Date.now(), blocks: [], version: \"2.17.0\" })\r\n            }\r\n\r\n        } else {\r\n            setMode(\"Publish\")\r\n            setApi(\"createArticle\")\r\n            setData({ time: Date.now(), blocks: [], version: \"2.17.0\" })\r\n            setBanner(\"NA\")\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.articleData) {\r\n            setReady(true)\r\n            setArticleId(props.articleData.article_id)\r\n            setData(JSON.parse(props.articleData.content))\r\n            setBanner(props.articleData.article_banner)\r\n\r\n            if (props.articleData.tags) {\r\n                let t = props.articleData.tags.map(i => i.tag)\r\n                setTags(t)\r\n            }\r\n\r\n        }\r\n    }, [props.articleData])\r\n\r\n    return (<>\r\n        {/* <br /> */}\r\n        {redir}\r\n        <div className=\"w-100 text-center\" style={{\r\n            // marginTop: \"90px\"\r\n        }}>\r\n\r\n            {(banner !== \"NA\") ? (<>\r\n\r\n                {/* <div className=\"text-center mb-2 hide-xs hide-sm show-md show-lg show-xl\">\r\n                    <img src={banner} alt=\"&nbsp;\" style={{\r\n                        maxHeight: \"20vw\",\r\n                        // maxWidth: \"1200px\",\r\n                        width: \"100vw\",\r\n\r\n                    }} />\r\n                </div> */}\r\n\r\n                <div className=\"w-100 show-xs show-sm hide-md\">\r\n                    <div className=\" text-center mb-2\" style={{\r\n                        height: \"40vw\",\r\n                        width: \"100%\",\r\n                        overflow: \"hidden\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        marginTop: \"15px\",\r\n                        borderBottomRightRadius: \"18px\",\r\n                        borderBottomLeftRadius: \"18px\",\r\n\r\n                    }}>\r\n                        <div className=\"preload w-100 h-100\">\r\n                            <img\r\n                                src={banner} alt=\"&nbsp;\"\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    width: \"auto\",\r\n                                    borderBottomRightRadius: \"18px\",\r\n                                    borderBottomLeftRadius: \"18px\",\r\n                                }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>) : (\r\n                    <>\r\n                        {/* <br /> */}\r\n                    </>\r\n                )}\r\n        </div>\r\n\r\n        <br />\r\n\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n\r\n                    {/* <hr className=\"light\"/> */}\r\n                    <button className=\"btn btn-primary mt-3\" onClick={validatePublish}>\r\n                        {mode}\r\n                    </button>\r\n\r\n                    <Modal show={show}\r\n                        onHide={handleClose}\r\n                        size=\"lg\"\r\n                    // dialogClassName=\"modal-90w\"\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{mode} Article</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n\r\n                            <h5>Article Card Preview</h5>\r\n                            <Card className=\"mb-4\" type={1} data={{\r\n                                article_id: \"test-article\",\r\n                                title: title,\r\n                                time: Date.now(),\r\n                                content: preview,\r\n                                bannerLink: banner,\r\n                                tags: article_tags,\r\n                                user: {\r\n                                    user_id: user_id,\r\n                                    imageLink: user_dp,\r\n                                    name: user_fullname,\r\n                                    username: user_username\r\n                                }\r\n                            }} />\r\n\r\n\r\n                            <hr className=\"light\" />\r\n\r\n                            <h5>Add tags</h5>\r\n\r\n                            <input type=\"text\" placeholder=\"enter tags\" className=\"form-control\" value={tagsInput} onChange={handleTagsAddition} />\r\n                            <div className=\"text-muted\" style={{ fontSize: \"12px\" }}>Press space to add tags</div>\r\n                            <br />\r\n                            <div className=\"tags\">\r\n\r\n                                {article_tags.map((i) => {\r\n\r\n                                    let h = hexStrColor(i)\r\n                                    let inv = invertColor(h, true)\r\n\r\n                                    console.log({ h, inv })\r\n                                    return (<>\r\n                                        <div className=\"tag d-inline-block noselect\" style={{\r\n                                            backgroundColor: \"#\" + h,\r\n                                            color: inv,\r\n                                            cursor: \"pointer\"\r\n                                        }} onClick={(() => handleTagRemoval(i))}>\r\n                                            #{i}\r\n                                        </div>\r\n                                    </>)\r\n\r\n                                })}\r\n\r\n                                {(() => {\r\n                                    if (article_tags.length > 0)\r\n                                        return (\r\n                                            <>\r\n                                                <div className=\"text-muted\" style={{ fontSize: \"12px\" }}>Click on the tags to remove them</div>\r\n                                            </>\r\n                                        )\r\n                                })()}\r\n                            </div>\r\n                            <hr className=\"light\" />\r\n                            Would you like to {mode} this article.\r\n                            <br />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handleBtnClick}>\r\n                                {mode}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <button className=\"btn btn-outline-secondary btn-sm mt-1 show-xs show-sm hide-md\" onClick={handleBannerClick}>\r\n                        {(() => {\r\n                            if (banner === \"NA\") {\r\n                                return \"Add Banner\"\r\n                            } else {\r\n                                return \"Remove Banner\"\r\n                            }\r\n                        })()}\r\n                    </button>\r\n                    {/* <hr className=\"light\"/> */}\r\n\r\n                    {(() => {\r\n                        if (banner !== \"NA\") {\r\n                            return (\r\n                                <>\r\n                                    <button className=\"btn btn-sm btn-info show-xs show-sm hide-md\" onClick={() => {\r\n                                        setBanner(getRandomBanner())\r\n                                    }}>Randomize</button>\r\n                                </>\r\n                            )\r\n                        }\r\n                    })()}\r\n                </div>\r\n\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"w-100\">\r\n                        {(banner !== \"NA\") ? (<>\r\n\r\n                            <div className=\"text-center mb-2 hide-xs hide-sm show-md show-lg show-xl\">\r\n                                <img src={banner} alt=\"&nbsp;\"\r\n                                    className=\"preload\"\r\n                                    style={{\r\n                                        height: \"20vw\",\r\n                                        // maxWidth: \"1200px\",\r\n                                        width: \"100%\",\r\n                                        borderBottomRightRadius: \"18px\",\r\n                                        borderBottomLeftRadius: \"18px\",\r\n\r\n                                    }} />\r\n                            </div>\r\n\r\n                            {/* <div className=\"w-100 show-xs show-sm hide-md\">\r\n                                <div className=\" text-center mb-2\" style={{\r\n                                    height: \"40vw\",\r\n                                    width: \"100vw\",\r\n                                    overflow: \"hidden\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\"\r\n\r\n                                }}>\r\n                                    <img src={banner} alt=\"&nbsp;\" style={{\r\n                                        height: \"100%\",\r\n                                        width: \"auto\",\r\n                                    }} />\r\n                                </div>\r\n                            </div> */}\r\n                        </>) : (<></>)}\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if ((props.mode === \"edit\" && ready) || (props.mode === \"new\")) {\r\n                            return (\r\n                                <>\r\n                                    {(banner == \"NA\" || banner == \"\") ? <br /> : <></>}\r\n                                    <EditorJs\r\n                                        placeholder=\"Write an awesome...\"\r\n                                        instanceRef={instance => (instanceRef.current = instance)}\r\n                                        onChange={handleSave}\r\n                                        tools={EDITOR_JS_TOOLS}\r\n                                        data={data_editor}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-2\">\r\n                    <button className=\"btn btn-outline-secondary btn-sm mt-3 hide-xs hide-sm show-md\" onClick={handleBannerClick}>\r\n                        {(() => {\r\n                            if (banner === \"NA\") {\r\n                                return \"Add Banner\"\r\n                            } else {\r\n                                return \"Remove Banner\"\r\n                            }\r\n                        })()}\r\n                    </button>\r\n\r\n                    {(() => {\r\n                        if (banner !== \"NA\") {\r\n                            return (\r\n                                <>\r\n                                    <button className=\"btn btn-sm btn-info hide-xs hide-sm show-md mt-2\" onClick={() => {\r\n                                        setBanner(getRandomBanner())\r\n                                    }}>Randomize</button>\r\n                                </>\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Editor;","import React, { useContext, useEffect } from 'react';\r\nimport Editor from \"./editorjs\"\r\nimport { AuthContext } from \"../contexts/auth_context\"\r\nimport notyf from \"../lib/notification\"\r\nconst NewArticle = (props) => {\r\n    console.log(props)\r\n    const { user_id, auth_token } = useContext(AuthContext)\r\n    useEffect(() => {\r\n        document.title = \"Create new article - Lattice\"\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <Editor user_id={user_id} auth_token={auth_token} mode=\"new\" notyf={notyf} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewArticle;"],"sourceRoot":""}