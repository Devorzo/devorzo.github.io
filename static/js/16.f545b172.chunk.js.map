{"version":3,"sources":["pages/status.js"],"names":["Status","props","React","useState","uiStatus","setUiStatus","ver","setVer","build_ver","setBuildVer","build_time","setBuildTime","codeStyle","fontSize","color","useEffect","console","log","api","getApiLink","Axios","get","then","response","data","success","version","Date","build","toISOString","catch","e","className","style","disp","d","getStatusDisp"],"mappings":"kLAkGeA,UAjFA,SAACC,GAAW,IAAD,EAEUC,IAAMC,UAAU,GAF1B,mBAEfC,EAFe,KAELC,EAFK,OAGAH,IAAMC,SAAS,IAHf,mBAGfG,EAHe,KAGVC,EAHU,OAIWL,IAAMC,SAAS,IAJ1B,mBAIfK,EAJe,KAIJC,EAJI,OAKaP,IAAMC,SAAS,IAL5B,mBAKfO,EALe,KAKHC,EALG,KAOlBC,EAAW,CACXC,SAAU,OACVC,MAAO,WAmCX,OAjCAZ,IAAMa,WAAU,WACZC,QAAQC,IAAI,CAAEC,IAAKC,gBACnBC,IAAMC,IAAN,UAAaF,cAAb,6BAAqDG,MAAK,SAACC,GACvDP,QAAQC,IAAIM,GACRA,EAASC,KAAKC,QACdpB,EAAY,GAEZA,EAAY,MAIpBe,IAAMC,IAAN,UAAaF,cAAb,MAA8BG,MAAK,SAACC,GAChCP,QAAQC,IAAIM,GAERhB,EADAgB,EACOA,EAASC,KAAKE,QAEd,aAIfN,IAAMC,IAAI,iBAAiBC,MAAK,SAACC,GAC7BP,QAAQC,IAAIM,GACRA,IACAd,EAAYc,EAASC,KAAKE,SAC1Bf,EAAa,IAAIgB,KAAKJ,EAASC,KAAKI,OAAOC,mBAEhDC,OAAM,SAACC,GACNtB,EAAY,IACZE,EAAa,IACbK,QAAQC,IAAIc,QAGjB,IAEC,oCACI,yBAAKC,UAAU,aAEX,yBAAKA,UAAU,0BACX,wCAEJ,iDAAsB,0BAAMC,MAAOrB,GAAYJ,GAA/C,MAAmE,0BAAMyB,MAAOrB,GAAYF,IAC5F,oDAAyB,0BAAMuB,MAAOrB,GAAYN,IAElD,sCAEA,yCApEM,SAAC4B,GACnB,IAAIC,EASJ,OARc,IAAVD,EACAC,EAAK,wCAAG,0BAAMF,MAAO,CAAEnB,MAAO,WAAtB,WACQ,IAAToB,EACPC,EAAK,wCAAG,0BAAMF,MAAO,CAAEnB,MAAO,QAAtB,aACQ,IAAToB,IACPC,EAAK,wCAAG,0BAAMF,MAAO,CAAEnB,MAAO,UAAtB,YAGLqB,EA0DoBC,CAAchC","file":"static/js/16.f545b172.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Axios from \"axios\"\r\n// import DropdownMenu, { DropdownItem } from '../components/dropdown'\r\nimport { getApiLink } from \"../lib/env.lib\"\r\nconst getStatusDisp = (disp) => {\r\n    let d;\r\n    if (disp === -1) {\r\n        d = (<> <span style={{ color: \"yellow\" }}>LODING</span></>)\r\n    } else if (disp === 0) {\r\n        d = (<> <span style={{ color: \"red\" }}>INACTIVE</span></>)\r\n    } else if (disp === 1) {\r\n        d = (<> <span style={{ color: \"green\" }}>ACTIVE</span></>)\r\n    }\r\n\r\n    return d\r\n}\r\nconst Status = (props) => {\r\n\r\n    const [uiStatus, setUiStatus] = React.useState(-1)\r\n    const [ver, setVer] = React.useState(\"\")\r\n    const [build_ver, setBuildVer] = React.useState(\"\")\r\n    const [build_time, setBuildTime] = React.useState(\"\")\r\n\r\n    let codeStyle= {\r\n        fontSize: \"16px\",\r\n        color: \"#35c644\"\r\n    }\r\n    React.useEffect(() => {\r\n        console.log({ api: getApiLink() })\r\n        Axios.get(`${getApiLink()}/api/v1/user-api-service`).then((response) => {\r\n            console.log(response)\r\n            if (response.data.success) {\r\n                setUiStatus(1)\r\n            } else {\r\n                setUiStatus(0)\r\n            }\r\n        })\r\n\r\n        Axios.get(`${getApiLink()}/`).then((response) => {\r\n            console.log(response)\r\n            if (response) {\r\n                setVer(response.data.version)\r\n            } else {\r\n                setVer(\"Loding\")\r\n            }\r\n        })\r\n\r\n        Axios.get(\"/version.json\").then((response) => {\r\n            console.log(response)\r\n            if (response) {\r\n                setBuildVer(response.data.version)\r\n                setBuildTime(new Date(response.data.build).toISOString())\r\n            }\r\n        }).catch((e) => {\r\n            setBuildVer(\"\")\r\n            setBuildTime(\"\")\r\n            console.log(e)\r\n        })\r\n\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n\r\n                <div className=\"w-100 text-center mt-4\">\r\n                    <h1>Lattice</h1>\r\n                </div>\r\n                <p> UI Build Version: <code style={codeStyle}>{build_ver}</code> - <code style={codeStyle}>{build_time}</code></p>\r\n                <p>Server Build Version: <code style={codeStyle}>{ver}</code></p>\r\n\r\n                <h1>Status</h1>\r\n\r\n                <p>UI STATUS: {getStatusDisp(uiStatus)}</p>\r\n\r\n                {/* <DropdownMenu title={\"hey\"} className=\"btn btn-primary\">\r\n                    <DropdownItem type=\"link\" to=\"/settings\">\r\n                        settings\r\n                    </DropdownItem>\r\n                    <DropdownItem onClick={(()=>{alert(\"hey\")})}>\r\n                        hey2\r\n                    </DropdownItem> \r\n                    <DropdownItem>\r\n                        hey3\r\n                    </DropdownItem>\r\n                     <DropdownItem>\r\n                        hey4\r\n                    </DropdownItem>\r\n                    <hr className=\"light p-0 m-0\" />\r\n                    <DropdownItem>\r\n                        hey\r\n                    </DropdownItem>\r\n                </DropdownMenu> */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Status;"],"sourceRoot":""}