{"version":3,"sources":["pages/status.js"],"names":["Status","props","React","useState","ver","setVer","build_ver","setBuildVer","build_time","setBuildTime","codeStyle","fontSize","color","useEffect","console","log","api","getApiLink","Axios","get","then","response","data","version","Date","build","toISOString","catch","e","className","role","aria-label","to","style"],"mappings":"yLA4IeA,UAzGA,SAACC,GAAU,MAEFC,IAAMC,SAAS,IAFb,mBAEjBC,EAFiB,KAEZC,EAFY,OAGSH,IAAMC,SAAS,IAHxB,mBAGjBG,EAHiB,KAGNC,EAHM,OAIWL,IAAMC,SAAS,IAJ1B,mBAIjBK,EAJiB,KAILC,EAJK,KAMlBC,EAAY,CAChBC,SAAU,OACVC,MAAO,WAoCT,OAlCAV,IAAMW,WAAU,WACdC,QAAQC,IAAI,CAAEC,IAAKC,gBAUnBC,IAAMC,IAAN,UAAaF,cAAb,MAA8BG,MAAK,SAACC,GAClCP,QAAQC,IAAIM,GAEVhB,EADEgB,EACKA,EAASC,KAAKC,QAEd,aAIXL,IAAMC,IAAI,iBACPC,MAAK,SAACC,GACLP,QAAQC,IAAIM,GACRA,IACFd,EAAYc,EAASC,KAAKC,SAC1Bd,EAAa,IAAIe,KAAKH,EAASC,KAAKG,OAAOC,mBAG9CC,OAAM,SAACC,GACNrB,EAAY,IACZE,EAAa,IACbK,QAAQC,IAAIa,QAEf,IAED,oCACE,yBAAKC,UAAU,aAKb,wBAAIA,UAAU,QAAd,0BAC0B,IACxB,0BAAMC,KAAK,MAAMC,aAAW,SAA5B,iBAIF,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,oBAAT,qBAIJ,wBAAIH,UAAU,QAAd,mBACA,2BACG,IADH,qBAEoB,0BAAMI,MAAOvB,GAAYJ,GAF7C,KAEiE,IAC/D,0BAAM2B,MAAOvB,GAAYF,IAE3B,oDACwB,0BAAMyB,MAAOvB,GAAYN","file":"static/js/17.780aa816.chunk.js","sourcesContent":["import React from 'react';\r\n// import Hammer from 'react-hammerjs'\r\nimport Axios from 'axios';\r\n// import ThemeToggler from '../components/themeToggler'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { getApiLink } from '../lib/env.lib';\r\n\r\nconst getStatusDisp = (disp) => {\r\n  let d;\r\n  if (disp === -1) {\r\n    d = (\r\n      <>\r\n        {' '}\r\n        <span style={{ color: 'yellow' }}>LODING</span>\r\n      </>\r\n    );\r\n  } else if (disp === 0) {\r\n    d = (\r\n      <>\r\n        {' '}\r\n        <span style={{ color: 'red' }}>INACTIVE</span>\r\n      </>\r\n    );\r\n  } else if (disp === 1) {\r\n    d = (\r\n      <>\r\n        {' '}\r\n        <span style={{ color: 'green' }}>ACTIVE</span>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return d;\r\n};\r\nconst Status = (props) => {\r\n  // const [uiStatus, setUiStatus] = React.useState(-1)\r\n  const [ver, setVer] = React.useState('');\r\n  const [build_ver, setBuildVer] = React.useState('');\r\n  const [build_time, setBuildTime] = React.useState('');\r\n\r\n  const codeStyle = {\r\n    fontSize: '16px',\r\n    color: '#35c644',\r\n  };\r\n  React.useEffect(() => {\r\n    console.log({ api: getApiLink() });\r\n    // Axios.get(`${getApiLink()}/api/v1/user-api-service`).then((response) => {\r\n    //     console.log(response)\r\n    //     if (response.data.success) {\r\n    //         setUiStatus(1)\r\n    //     } else {\r\n    //         setUiStatus(0)\r\n    //     }\r\n    // })\r\n\r\n    Axios.get(`${getApiLink()}/`).then((response) => {\r\n      console.log(response);\r\n      if (response) {\r\n        setVer(response.data.version);\r\n      } else {\r\n        setVer('Loding');\r\n      }\r\n    });\r\n\r\n    Axios.get('/version.json')\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response) {\r\n          setBuildVer(response.data.version);\r\n          setBuildTime(new Date(response.data.build).toISOString());\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setBuildVer('');\r\n        setBuildTime('');\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {/* <div className=\"w-100 text-center mt-4\">\r\n                    <h1>Lattice</h1>\r\n                </div> */}\r\n\r\n        <h2 className=\"mt-2\">\r\n          More info about Devorzo{' '}\r\n          <span role=\"img\" aria-label=\"emoji\">\r\n            ðŸ‘‹\r\n          </span>\r\n        </h2>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/code-of-conduct\">Code of Conduct</Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <h3 className=\"mt-4\">Stats for nerds</h3>\r\n        <p>\r\n          {' '}\r\n          UI Build Version: <code style={codeStyle}>{build_ver}</code> -{' '}\r\n          <code style={codeStyle}>{build_time}</code>\r\n        </p>\r\n        <p>\r\n          Server Build Version: <code style={codeStyle}>{ver}</code>\r\n        </p>\r\n        {/* <h1>Status</h1> */}\r\n\r\n        {/* <p>UI STATUS: {getStatusDisp(uiStatus)}</p> */}\r\n\r\n        {/* <Hammer onSwipe={(e) => {\r\n                    console.log(e)\r\n                }} direction={\"DIRECTION_DOWN\"}><div>Tap Me</div></Hammer> */}\r\n\r\n        {/* <ThemeToggler /> */}\r\n\r\n        {/* <DropdownMenu title={\"hey\"} className=\"btn btn-primary\">\r\n                    <DropdownItem type=\"link\" to=\"/settings\">\r\n                        settings\r\n                    </DropdownItem>\r\n                    <DropdownItem onClick={(()=>{alert(\"hey\")})}>\r\n                        hey2\r\n                    </DropdownItem> \r\n                    <DropdownItem>\r\n                        hey3\r\n                    </DropdownItem>\r\n                     <DropdownItem>\r\n                        hey4\r\n                    </DropdownItem>\r\n                    <hr className=\"light p-0 m-0\" />\r\n                    <DropdownItem>\r\n                        hey\r\n                    </DropdownItem>\r\n                </DropdownMenu> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n"],"sourceRoot":""}