{"version":3,"sources":["pages/register.js"],"names":["Register","props","useContext","AuthContext","isLoggedIn","setAuth","useState","inviteMode","setInviteMode","setInviteCode","name","setName","username","setUsername","email","setEmail","password","setPassword","confpassword","setConfpass","agreed","setAgreed","handleChange","e","n","target","v","value","to","className","style","backgroundColor","color","type","onChange","placeholder","id","aria-describedby","required","checked","htmlFor","onClick","preventDefault","console","log","data","fullname","test","validateEmail","length","notyf","error","Axios","post","getApiLink","then","response","success","catch","message"],"mappings":"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","file":"static/js/15.07e6cb35.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\r\nimport React, { useState, useContext } from 'react';\r\n// import img1 from \"../images/i2.png\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nimport { AuthContext } from \"../contexts/auth_context\"\r\nimport notyf from '../lib/notification';\r\n\r\nimport Axios from \"axios\"\r\nimport { getApiLink } from \"../lib/env.lib\"\r\n\r\nconst validateEmail = (email) => {\r\n    let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\nconst Register = (props) => {\r\n\r\n    const { isLoggedIn, setAuth } = useContext(AuthContext);\r\n\r\n    const [inviteMode, setInviteMode] = useState(2)\r\n    const [inviteCode, setInviteCode] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confpassword, setConfpass] = useState(\"\")\r\n    const [agreed, setAgreed] = useState(false)\r\n\r\n    function handleChange(e) {\r\n        // console.log(e.target.name, e.target.value)\r\n        let n = e.target.name;\r\n        let v = e.target.value;\r\n        if (n === \"invite\") {\r\n            setInviteCode(v)\r\n        } else if (n === \"fullname\") {\r\n            setName(v)\r\n        } else if (n === \"username\") {\r\n            setUsername(v)\r\n        } else if (n === \"email\") {\r\n            setEmail(v)\r\n        } else if (n === \"password\") {\r\n            setPassword(v)\r\n        } else if (n === \"confpassword\") {\r\n            setConfpass(v)\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log({\r\n            // inviteCode,\r\n            name,\r\n            username,\r\n            email,\r\n            password,\r\n            confpassword\r\n        })\r\n\r\n        let data = {\r\n            // inviteCode: inviteCode,\r\n            username: username,\r\n            fullname: name,\r\n            email,\r\n            password,\r\n            confpassword\r\n        }\r\n\r\n        // if (inviteCode === \"\") {\r\n        //     notyf.error(\"Invalid inviteCode\")\r\n        //     return\r\n        // }\r\n\r\n        if (name === \"\") {\r\n            notyf.error(\"Invalid name\")\r\n            return\r\n        }\r\n\r\n        if (username === \"\") {\r\n            notyf.error(\"Invalid username\")\r\n            return\r\n        }\r\n\r\n        if (email === \"\" || !validateEmail(email)) {\r\n            notyf.error(\"Invalid email\")\r\n            return\r\n        }\r\n\r\n        if (password === \"\" || password.length < 6) {\r\n            notyf.error(\"Invalid password\")\r\n            return\r\n        }\r\n        if (confpassword === \"\" || confpassword.length < 6) {\r\n            notyf.error(\"Invalid confirmation password\")\r\n            return\r\n        }\r\n\r\n        if (password !== confpassword) {\r\n            notyf.error(\"Passwords do not match\")\r\n            return\r\n        }\r\n\r\n        Axios.post(`${getApiLink()}/register`, data).then((response) => {\r\n            // console.log(getApiLink())\r\n            // console.log(response)\r\n            // alert(response)\r\n            notyf.success(\"Registered successfully\")\r\n\r\n            if (response.data.success) {\r\n                setAuth(response.data)\r\n            }\r\n        }).catch((e) => {\r\n            // alert(e)\r\n            console.log(e.response)\r\n            if (e.response.data.error.message !== null) {\r\n                notyf.error(\"\" + e.response.data.error.message)\r\n            } else {\r\n                notyf.error(\"Error\")\r\n            }\r\n            // notyf.error(\"\" + e.response.data.error.message)\r\n        })\r\n        // alert(name + \" \" + username + \" \" + email + \" \" + password + \" \" + confpassword)\r\n    }\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        if (inviteMode === 2) {\r\n            return (\r\n                <>\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-9 col-lg-12 col-xl-10\">\r\n                                <div className=\"card shadow-lgx o-hidden border-0 my-5x\" style={{ backgroundColor: \"inherit\", color: \"inherit\" }}>\r\n                                    <div className=\"card-body p-0\">\r\n                                        <div className=\"row\">\r\n                                            {/* <div className=\"col-lg-6 d-none d-lg-flex\" style={{ backgroundColor: \"inherit\", color: \"inherit\" }}>\r\n                                                <img alt=\"img\" src={img1}\r\n                                                    style={{ height: \"400px\", marginTop: \"87px\", paddingTop: \"1px\", }} />\r\n                                            </div> */}\r\n                                            <div className=\"col-lg-3\"></div>\r\n                                            <div className=\"col-lg-6\">\r\n                                                <div className=\"custom-card2 mt-4 p-2\">\r\n                                                    <div className=\"pt-4 p-md-5 pl-sm-0 pr-sm-0 pt-sm-5\">\r\n                                                        <div className=\"text-center\">\r\n\r\n                                                            <h4 className=\"mb-4\"\r\n                                                                style={{ color: \"inherit\" }}>Create an account</h4>\r\n                                                        </div>\r\n                                                        <form className=\"user\">\r\n\r\n                                                            <div className=\"form-group\">\r\n                                                                {/* <div className=\"col-sm-6 mb-3 mb-sm-0\"><input className=\"form-control form-control-user\" type=\"text\" id=\"exampleFirstName\" placeholder=\"First Name\" name=\"first_name\" required /></div>\r\n                                                    <div className=\"col-sm-6\"><input className=\"form-control form-control-user\" type=\"text\" id=\"exampleFirstName\" placeholder=\"Last Name\" name=\"last_name\" required /></div> */}\r\n\r\n                                                                <input type=\"text\" name=\"fullname\" className=\"form-control form-control-user\" onChange={handleChange} placeholder=\"What would you like us to call you?\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group\">\r\n                                                                <input className=\"form-control form-control-user\"\r\n                                                                    name=\"username\" onChange={handleChange}\r\n                                                                    type=\"text\" id=\"exampleUsernameEmail\" aria-describedby=\"username\"\r\n                                                                    placeholder=\"Enter Username...\" required />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group\">\r\n                                                                <input className=\"form-control form-control-user\"\r\n                                                                    onChange={handleChange}\r\n                                                                    type=\"email\" id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\r\n                                                                    placeholder=\"Enter Email Address...\" name=\"email\"\r\n                                                                    style={{}} required />\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            {/* <div className=\"form-group\">\r\n                                                    <input className=\"form-control form-control-user\"\r\n                                                        type=\"password\" id=\"exampleInputPassword\" placeholder=\"Password\"\r\n                                                        name=\"password\" style={{}} />\r\n                                                </div> */}\r\n\r\n                                                            <div className=\"form-group row\">\r\n                                                                <div className=\"col-sm-6 mb-3 mb-sm-0\">\r\n                                                                    <input className=\"form-control form-control-user\" type=\"password\" onChange={handleChange} id=\"examplePasswordInput\" placeholder=\"Password\" name=\"password\" />\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input className=\"form-control form-control-user\" type=\"password\" onChange={handleChange} id=\"exampleRepeatPasswordInput\" placeholder=\"Repeat Password\" name=\"confpassword\" />\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            <div className=\"form-group\">\r\n                                                                <div className=\"pl-2 custom-checkbox small\">\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input\r\n                                                                            className=\"form-check-input custom-control-input\" type=\"checkbox\"\r\n                                                                            id=\"formCheck-1\" onChange={(e)=>{\r\n                                                                                setAgreed(e.target.checked)\r\n                                                                            }} checked={agreed}/>\r\n                                                                        <label\r\n                                                                            className=\"form-check-label custom-control-label\" htmlFor=\"formCheck-1\"\r\n                                                                            style={{}}>I agree to <Link to=\"/code-of-conduct\">Code of conduct\r\n                                                                            </Link>, <Link to=\"/privacy\">privacy policy</Link> and <Link to=\"/terms\">terms</Link> of this site.</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <button className=\"btn btn-primary btn-block text-white btn-user\"\r\n                                                                type=\"submit\" onClick={handleSubmit} style={{}}>Register</button>\r\n\r\n                                                            {/* <hr /> */}\r\n\r\n                                                            {/* <a className=\"btn btn-primary btn-block text-white btn-google btn-user\"\r\n                                                    role=\"button\" style={{}} href=\"#btn\">\r\n                                                    <i\r\n                                                        className=\"fab fa-google\"></i>&nbsp; Login with Google</a><a href=\"#btn\"\r\n                                                            className=\"btn btn-primary btn-block text-white btn-facebook btn-user\"\r\n                                                            role=\"button\" style={{}}><i\r\n                                                                className=\"fab fa-facebook-f\"></i>&nbsp; Login with Facebook</a> */}\r\n                                                            {/* <hr /> */}\r\n                                                        </form>\r\n                                                        {/* <div className=\"text-center\"><a className=\"small\" href=\"forgot-password.html\"\r\n                                                style={{}}>Forgot Password?</a></div> */}\r\n                                                        <div className=\"text-center mt-5\"><Link className=\"small\" to=\"/login\"\r\n                                                            style={{ color: \"inherit\" }}>Already have an account? Login!</Link>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        } else if (inviteMode === 1) {\r\n            return (\r\n                <>\r\n                    {/* <div className=\"container\"> */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4\">\r\n                            <h1>Enter invite code: </h1>\r\n\r\n                            <button className=\"btn btn-primary\" onClick={() => {\r\n                                setInviteMode(2)\r\n                            }}>Submit</button>\r\n                        </div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                    {/* </div> */}\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    {/* <div className=\"container\"> */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4\">\r\n                            <h1>Enter email address: </h1>\r\n\r\n                            <button className=\"btn btn-primary\" onClick={() => {\r\n                                setInviteMode(1)\r\n                            }}>Submit</button>\r\n                        </div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                    {/* </div> */}\r\n                </>\r\n            )\r\n        }\r\n\r\n    } else {\r\n        return (<>\r\n            <Redirect to=\"/\" />\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default Register;"],"sourceRoot":""}